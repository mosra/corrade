/*
    This file is part of Corrade.

    Copyright © 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
                2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025
              Vladimír Vondruš <mosra@centrum.cz>

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
*/

namespace Corrade {

/** @page corrade-changelog-old Archived changelogs

@tableofcontents

@section corrade-changelog-2018-04 2018.04

Released 2018-05-01, tagged as
[v2018.04](https://github.com/mosra/corrade/releases/tag/v2018.04).

@subsection corrade-changelog-2018-04-dependencies Dependency changes

-   Building for Android now requires CMake 3.7 with builtin Android
    crosscompilation support, the old toolchains were removed. Only the Clang
    and libc++ toolchain is now supported, support for GCC and libstdc++ was
    dropped, as it was still missing some important C++11 functionality. See
    @ref building-corrade-cross-android for more information.

@subsection corrade-changelog-2018-04-new New features

-   New @ref CORRADE_PLUGINMANAGER_NO_DYNAMIC_PLUGIN_SUPPORT preprocessor
    @cpp #define @ce and CMake variable for easier distinction of platforms
    without dynamic plugin loading support

@subsubsection corrade-changelog-2018-04-new-pluginmanager PluginManager library

-   New @ref PluginManager::AbstractPlugin::pluginSearchPaths() interface
    allowing plugin interfaces to specify plugin search paths to make life
    simpler for the end user
-   Added @ref PluginManager::AbstractManager::aliasList() for listing all
    available plugin aliases
-   Ability to control what plugin is used for given alias using
    @ref PluginManager::AbstractManager::setPreferredPlugins() (see
    [mosra/magnum-plugins#25](https://github.com/mosra/magnum-plugins/issues/25))
-   Ability to configure extra plugin functionality via
    @ref PluginManager::AbstractPlugin::configuration()
-   Ability to load plugins outside of the plugin directory by supplying a file
    path to @ref PluginManager::AbstractManager::load()

@subsubsection corrade-changelog-2018-04-new-testsuite TestSuite library

-   When compiling for Emscripten, the @ref corrade-cmake-add-test "corrade_add_test()"
    macro now generates a HTML runner for running each test case in a web
    browser. See @ref TestSuite-Tester-running-emscripten-browser for more
    information.
-   @ref corrade-cmake-add-test "corrade_add_test()" learned a new `ARGUMENTS`
    option for passing additional arguments to test executables

@subsubsection corrade-changelog-2018-04-new-utility Utility library

-   Ability to query current scoped output stream using @ref Utility::Debug::output(),
    @ref Utility::Warning::output() and @ref Utility::Error::output()
-   New @ref CORRADE_DEPRECATED_NAMESPACE() and @ref CORRADE_DEPRECATED_FILE()
    macros
-   New @ref CORRADE_IGNORE_DEPRECATED_PUSH and @ref CORRADE_IGNORE_DEPRECATED_POP
    macros useful for writing and testing APIs that need to use deprecated
    functionality
-   New @ref CORRADE_ASSERT_OUTPUT() macro as an user-friendly counterpart to
    @ref CORRADE_INTERNAL_ASSERT_OUTPUT()
-   New @ref CORRADE_CONSTEXPR_ASSERT() and @ref CORRADE_INTERNAL_CONSTEXPR_ASSERT()
    macros for use in C++11 constexpr functions
-   @ref Utility::String::beginsWith() and @ref Utility::String::endsWith()
    overloads taking just a single @cpp char @ce
-   @ref Utility::String::ltrimInPlace(), @ref Utility::String::rtrimInPlace()
    and @ref Utility::String::trimInPlace() for easier operation on mutable
    strings. The @ref Utility::String::ltrim(), @ref Utility::String::rtrim()
    and @ref Utility::String::trim() functions are now implemented using these.
-   @ref Utility::String::stripPrefix() and @ref Utility::String::stripSuffix()
    for checked prefix and suffix stripping

@subsection corrade-changelog-2018-04-buildsystem Build system

-   Stable version of Corrade is now available as a binary package in the
    ArchLinux `[community]` repo
-   Homebrew macOS packages were updated to install the stable version by
    default
-   Fixed the Debian package to not include a revision. While just a warning on
    Ubuntu, it's a hard error on Debian. (See [mosra/corrade#44](https://github.com/mosra/corrade/issues/44).)

@subsection corrade-changelog-2018-04-bugfixes Bug fixes

-   The Android ADB test runner was not correctly propagating @ref TestSuite
    `CORRADE_TEST_*` environment variables to the executable
-   Wrong destruction order of @ref PluginManager::Manager instances could lead
    to an infinite loop if cross-manager plugin dependencies were involved. Now
    an assertion fires instead.
-   Fixed usage of @ref Utility::ConfigurationValue specializations to support
    types without default constructors and be able to return
    non-default-constructed instances for empty values.

@subsection corrade-changelog-2018-04-deprecated Deprecated APIs

-   The `Corrade/Utility/AndroidStreamBuffer.h` header is deprecated, use
    @ref Corrade/Utility/AndroidLogStreamBuffer.h instead
-   `PluginManager::Manager::instance()` is deprecated as it has a confusing
    naming, use @ref PluginManager::Manager::instantiate() instead

@subsection corrade-changelog-2018-04-compatibility Potential compatibility breakages, removed APIs

-   Removed the unnecessarily opaque `CORRADE_PLUGIN_INTERFACE()` macro. Define
    a @cpp public @ce @cpp static std::string pluginInterface() @ce function
    instead. See @ref PluginManager::AbstractPlugin for more information.
-   Moved the @ref CORRADE_PLUGIN_REGISTER() macro to
    @ref Corrade/PluginManager/AbstractManager.h from
    @ref Corrade/PluginManager/AbstractPlugin.h to reduce header dependencies

@subsection corrade-changelog-2018-04-docs Documentation

-   A new @ref corrade-developers page containing step-by-step checklists for
    maintainers and core developers
-   Updating the docs with compiled code snippets to ensure they don't get out
    of sync with the code
-   Various documentation updates, clarifications and fixes

@section corrade-changelog-2018-02 2018.02

Released 2018-02-15, tagged as
[v2018.02](https://github.com/mosra/corrade/releases/tag/v2018.02). See the
[release announcement](https://blog.magnum.graphics/announcements/2018.02/) for
a high-level overview.

@subsection corrade-changelog-2018-02-dependencies Dependency changes

-   Completely removed NaCl support (see https://blog.chromium.org/2017/05/goodbye-pnacl-hello-webassembly.html)
-   Dropped support for the old MinGW32 (only MinGW-w64 is supported now)
-   Bumped minimal CMake version to 2.8.12
-   Removed support for OSX 10.8 and older
-   Dropped the `compatibility` branch and all support for MSVC 2013 and GCC <
    4.7

@subsection corrade-changelog-2018-02-new New features

-   MSVC 2015 and 2017 support in `master` branch. It needs some workarounds,
    thus the compatibility is controlled using `MSVC2015_COMPATIBILITY` /
    `MSVC2017_COMPATIBILITY` CMake option, which is then exposed as
    @ref CORRADE_MSVC2015_COMPATIBILITY / @ref CORRADE_MSVC2017_COMPATIBILITY
    CMake variable and preprocessor macro. See
    [mosra/corrade#34](https://github.com/mosra/corrade/pull/34).
-   Windows RT (Store/Phone) support. Builds for that platform have
    @ref CORRADE_TARGET_WINDOWS_RT CMake variable and preprocessor macro
    defined.
-   iOS support, integration of @ref TestSuite with Xcode XCTest
-   WebAssembly support when building for Emscripten

@subsubsection corrade-changelog-2018-02-new-containers Containers library

-   New @ref Containers::StaticArray class, similar to @ref Containers::Array
    but with stack-allocated storage of compile-time size
-   New @ref Containers::StaticArrayView class, similar to @ref Containers::ArrayView
    but with compile-time size information
-   New @ref Containers::Optional class, providing a subset of functionality
    from C++17 @ref std::optional (see [mosra/corrade#36](https://github.com/mosra/corrade/pull/36))
-   Added @cpp Containers::NoInit @ce, @cpp Containers::DirectInit @ce,
    @cpp Containers::DefaultInit @ce, @cpp Containers::ValueInit @ce and
    @cpp Containers::InPlaceInit @ce tags for better control over
    initialization of @ref Containers::Array and @ref Containers::StaticArray
-   Added @ref Containers::Array::Array(InPlaceInitT, std::initializer_list<T>)
    to create @ref Containers::Array from an initializer list
-   New @ref Containers::Array::Array(T*, std::size_t, D) "Containers::Array::Array(T*, std::size_t, D)"
    constructor that allows wrapping externally allocated array with custom
    deleter function (see [mosra/magnum-examples#20](https://github.com/mosra/magnum-examples/issues/20))
-   New @ref Containers::arrayView() and @ref Containers::staticArrayView()
    helper functions to make @ref Containers::ArrayView / @ref Containers::StaticArrayView
    instances without needing to fully specify the type (similarly to what
    @ref std::make_tuple() is to @ref std::tuple)
-   New @ref Containers::arrayCast() function to @cpp reinterpret_cast @ce
    arrays with correct size recalculation
-   New @ref Containers::arraySize() helper function for easier size queries
    on array-like types
-   Added XOR operators to @ref Containers::EnumSet
-   New @ref Containers::enumSetDebugOutput() utility to help with implementing
    debug operators for @ref Containers::EnumSet types

@subsubsection corrade-changelog-2018-02-new-pluginmanager PluginManager library

-   Name passed to plugin constructors is now the aliased name instead of the
    actual name, allowing the plugins to have different functionality based on
    name with which they are loaded (for example an image converter plugin can
    export different file format if it's loaded as `JpegImageConverter` or
    `PngImageConverter`). New @ref PluginManager::AbstractPlugin::plugin()
    function returns the aliased name.

@subsubsection corrade-changelog-2018-02-new-testsuite TestSuite library

-   Major update of @ref TestSuite library including colored output for more
    readable output, command-line arguments for fine-grained control,
    setup/teardown functions, instanced and repeated tests, benchmarks for
    wall and CPU time, CPU clock, custom benchmarks, ability to override test
    case name and description and more. See @ref TestSuite::Tester
    documentation for more information.
-   Ability to run @ref TestSuite tests on Android using ADB, with all relevant
    environment variables propagated to the device/emulator
-   Ability to run @ref TestSuite tests from within Xcode via XCTest
-   Added @ref TestSuite::Compare::Less, @ref TestSuite::Compare::LessOrEqual,
    @ref TestSuite::Compare::Greater, @ref TestSuite::Compare::GreaterOrEqual
    and @ref TestSuite::Compare::Around
-   Added @ref TestSuite::Tester::setTestName()
-   Ability to bundle files with @ref corrade-cmake-add-test "corrade_add_test()"
    CMake macro for Android and Emscripten tests

@subsubsection corrade-changelog-2018-02-new-utility Utility library

-   Added @ref Utility::Arguments::setFromEnvironment(), making it possible to
    pass options via environment variables. List of all environment options is
    also available through @ref Utility::Arguments::environment() for debugging
    purposes, environment values are UTF-8 encoded on all platforms
-   Scoped output redirection in @ref Utility::Debug
-   Colored output in @ref Utility::Debug with scoping and both ANSI and
    Windows console API support
    (see [mosra/corrade#21](https://github.com/mosra/corrade/pull/21));
    @ref Utility::Debug::isTty() for detecting whether colored output can be
    used
-   Added @ref Utility::Fatal output. Similar to @ref Utility::Error but exits
    with defined return code right after printing the message.
-   Added @cpp Utility::Directory::isSandboxed() @ce,
    @cpp Utility::Directory::executableLocation() @ce,
    @cpp Utility::Directory::tmp() @ce,
    @cpp Utility::Directory::fromNativeSeparators() @ce and
    @cpp Utility::Directory::toNativeSeparators() @ce
-   Added @cpp Utility::Directory::map() @ce and @cpp Utility::mapRead() @ce
    for mapping files into memory, works on non-RT Windows and all Unix-like
    systems (see [mosra/corrade#27](https://github.com/mosra/corrade/pull/27))
-   Added @ref Utility::Resource::hasGroup()
-   Added @ref Utility::Unicode::prevChar(), @ref Utility::Unicode::utf8()
-   Added @ref Utility::Unicode::widen() and @ref Utility::Unicode::narrow()
    helpers for interacting with Unicode Windows APIs
-   Added @ref CORRADE_TARGET_IOS and @ref CORRADE_TARGET_IOS_SIMULATOR
    macros and CMake variables
-   Added @ref CORRADE_TARGET_X86 and @ref CORRADE_TARGET_ARM macros
-   Added @ref CORRADE_DEPRECATED_FILE(), @ref CORRADE_DEPRECATED_ALIAS(),
    @cpp CORRADE_ALIGNAS() @ce, @cpp CORRADE_NORETURN @ce and
    @ref CORRADE_CXX_STANDARD macros

@subsection corrade-changelog-2018-02-changes Changes and improvements

-   Various updates and code modernization (see
    [mosra/corrade#33](https://github.com/mosra/corrade/pull/33))

@subsubsection corrade-changelog-2018-02-changes-containers Containers library

-   @ref Containers::EnumSet now can take a @cpp Containers::NoInit @ce tag to
    create an uninitialized value
-   Exposed @ref Containers::EnumSet::FullValue constant

@subsubsection corrade-changelog-2018-02-changes-pluginmanager PluginManager library

-   @ref PluginManager::Manager now properly loads plugins from UTF-8 encoded
    paths also on Windows
-   @ref PluginManager::Manager can now be constructed without specifying
    plugin directory

@subsubsection corrade-changelog-2018-02-changes-testsuite TestSuite library

-   @ref TestSuite::Compare::Container now prints contents of whole container
    instead of just the first difference
-   @ref TestSuite::Compare::File, @ref TestSuite::Compare::FileToString and
    @ref TestSuite::Compare::StringToFile now properly handles UTF-8 encoded
    filenames also on Windows
-   @ref CORRADE_EXPECT_FAIL_IF() now works also on types with explicit bool
    conversion

@subsubsection corrade-changelog-2018-02-changes-utility Utility library

-   @ref Utility::Arguments::parse() can now be called with zero/null
    arguments
-   @ref Utility::Arguments::value() now takes
    @ref Utility::ConfigurationValueFlags for easier parsing of hexadecimal
    and other values
-   @ref Utility::Configuration is now able to properly load and save
    configuration files from UTF-8 encoded filenames also on Windows
-   Simpler implementation of @ref Utility::Debug operators, they now take the
    class by reference instead of by value
-   Ensuring that pointer values are printed by @ref Utility::Debug
    consistently on all platforms
-   Ensuring that floating-point values printed by @ref Utility::Debug have
    enough digits of precision based on their type
-   All @cpp Utility::Directory @ce functions now properly take and return
    UTF-8 encoded paths on Windows (see [mosra/corrade#31](https://github.com/mosra/corrade/issues/31))
-   Implemented @cpp Utility::Directory::configurationDir() @ce and
    @cpp Utility::Directory::home() @ce on Emscripten, OSX and iOS with proper
    handling of sandboxed apps (see [mosra/corrade#6](https://github.com/mosra/corrade/issues/6))
-   @ref Utility::Resource and @ref corrade-cmake-add-resource "corrade_add_resource()"
    CMake macro now properly handle UTF-8 filenames on all platforms
-   Removed global constructors from @ref Utility::String internals
-   Added @ref Utility::Unicode::nextChar() overload that takes a char array
    view instead of a @ref std::string

@subsection corrade-changelog-2018-02-buildsystem Build system

-   Continuous testing for Linux, OSX, Windows MSVC, Windows MinGW, Windows RT,
    iOS, Android and Emscripten on [Travis CI](https://travis-ci.org/mosra/corrade)
    and [AppVeyor CI](https://ci.appveyor.com/project/mosra/corrade), with code
    coverage on [codecov.io](https://codecov.io/gh/mosra/corrade); replacing
    the unmaintained and outdated Jenkins configuration
-   Support for CMake subprojects. You can now clone Corrade into a
    subdirectory in your project and add it using @cmake add_subdirectory() @ce.
    The @cmake find_package() @ce command will then use the CMake subproject
    instead of looking for it in system-wide locations.
-   Reworked CMake buildsystem to use the new imported target workflow, see
    @ref corrade-cmake for more information
-   CMake targets are now organized in folders for better development
    experience in IDEs such as Visual Studio or Xcode
-   Enabling `-Wmissing-prototypes` warning on Clang when
    `CORRADE_USE_PEDANTIC_FLAGS` property is enabled
-   It's now possible to build only parts of the library using `WITH_*` CMake
    options and @cmake find_package() @ce needs to request particular parts of
    the library that are used; see @ref building-corrade and @ref corrade-cmake
    for more information
-   @ref corrade-cmake-add-plugin "corrade_add_plugin()" now properly installs
    plugin *.dll to `bin/` and *.lib to `lib/` on Windows
-   Added @ref building-corrade-packages-brew "Homebrew package" (see [mosra/corrade#22](https://github.com/mosra/corrade/issues/22))
-   Added @ref corrade-cmake-find-dlls-for-libs "corrade_find_dlls_for_libs()"
    CMake macro
-   `MACOSX_RPATH` is now enabled by default on CMake 3.0+
-   Enabling only C++ in CMake @cmake project() @ce call, if possible, to speed
    up initial CMake run
-   Fixed building on TDM-GCC (see [mosra/corrade#35](https://github.com/mosra/corrade/issues/35))
-   Fixed various MSVC compilation issues (see [mosra/corrade#28](https://github.com/mosra/corrade/pull/28))
-   Various fixes for builds without deprecated features enabled (see
    [mosra/corrade#24](https://github.com/mosra/corrade/issues/24),
    [mosra/corrade#32](https://github.com/mosra/corrade/pull/32))
-   Properly passing `/std:c++14` or `/std:c++14` when `CORRADE_CXX_STANDARD`
    is set to `14` or `17`

@subsection corrade-changelog-2018-02-bugfixes Bug fixes

-   @ref Containers::ArrayView::data() on non-const data now properly returns
    non-const pointer
-   Worked around function template merging on MSVC, which caused different
    signals being merged into one in @ref Interconnect library
-   Added a workaround to `interface` macro defined by `windows.h` that broke
    @ref PluginManager headers
-   Calling @ref CORRADE_EXPECT_FAIL() more than once in a single block caused
    multiple definition errors
-   Second row in @ref Utility::Arguments help output was not properly indented
    for named arguments
-   Prefixed @ref Utility::Arguments failed on encountering value starting with
    `-`
-   @cpp Utility::Directory::mkpath() @ce now properly returns @cpp false @ce
    if path creation fails
-   Fixed @cpp Utility::Directory::rm() @ce for directories on Emscripten
-   Fixed unaligned reads and iterative digesting in @ref Utility::Sha1
-   Properly re-running CMake and updating dependencies when resource
    configuration file added by @ref corrade-cmake-add-resource "corrade_add_resource()"
    changes
-   Fixed @ref Containers::LinkedList::move() called on an item itself

@subsection corrade-changelog-2018-02-deprecated Deprecated APIs

-   @cpp Containers::ArrayReference @ce is deprecated, use the shorter
    @ref Containers::ArrayView name instead
-   @cpp Containers::Array::zeroInitialized() @ce is deprecated, use
    @ref Containers::Array::Array(ValueInitT, std::size_t) instead
-   @cpp Containers::Array::from() @ce is deprecated, use
    @ref Containers::Array::Array(InPlaceInitT, std::initializer_list<T>)
    instead
-   @cpp Utility::Arguments::setHelpKey() @ce is deprecated as its
    functionality was merged into @ref Utility::Arguments::setHelp()
-   @cpp Utility::Debug::setOutput() @ce is deprecated and superseded by scoped
    output, see @ref Utility::Debug class documentation for more information
-   @cpp Utility::Debug::noNewlineAtTheEnd() @ce is deprecated, use
    @ref Utility::Debug::Flag::NoNewlineAtTheEnd instead
-   @cpp Utility::sleep() @ce is deprecated, use @ref Utility::System::sleep()
    instead
-   `CORRADE_*_LIBRARIES`, `CORRADE_*_INCLUDE_DIRS` and `CORRADE_RC_EXECUTABLE`
    CMake variables are deprecated in favor of `Corrade::*` imported targets,
    `CORRADE_CXX_FLAGS` is deprecated in favor of `CORRADE_CXX_STANDARD` and
    `CORRADE_USE_PEDANTIC_FLAGS` properties. See @ref corrade-cmake for more
    information.

@subsection corrade-changelog-2018-02-compatibility Potential compatibility breakages, removed APIs

-   @ref PluginManager::AbstractPlugin now takes plugin name via `const&`
    instead of by-value
-   Reversed parameter order of @ref CORRADE_EXPECT_FAIL_IF() to be more
    intuitive
-   The `Utility::Debug::setFlags()` function was removed, use
    @ref Utility::Debug::nospace and @ref Utility::Debug::Flag::NoNewlineAtTheEnd
    instead
-   The @cpp Utility::Directory @ce, @ref Utility::String and
    @ref Utility::Unicode classes are now a namespace (might break `using`
    declarations, but otherwise it's fully source-compatible)
-   @ref corrade-cmake-add-test "corrade_add_test()" CMake macro now calls
    @cmake target_link_libraries() @ce with explicit `PRIVATE` keyword, meaning
    the users also have to specify `PUBLIC`/`PRIVATE`/`INTERFACE` when calling
    @cmake target_link_libraries() @ce on a test
-   All path handling functions in @cpp Utility::Directory @ce consistently
    return and expect only forward slashes as directory separators

@subsection corrade-changelog-2018-02-documentation Documentation

-   New documentation theme powered by [m.css](https://mcss.mosra.cz) and
    related massive updates of *everything*
-   Various updates and clarifications to the @ref corrade-coding-style page
-   All example code is put into public domain (or UNLICENSE) to free you from
    any legal obstacles when reusing the code in your apps.
-   The @ref building-corrade documentation now prefers package installation
    instead of manual build
-   Documented how to use Vcpkg packages
-   Various other updates (see [mosra/corrade#26](https://github.com/mosra/corrade/pull/26),
    [mosra/corrade#30](https://github.com/mosra/corrade/pull/30))

@section corrade-changelog-2015-05 2015.05

Released 2015-05-09, tagged as
[v2015.05](https://github.com/mosra/corrade/releases/tag/v2015.05). See the
[release announcement](https://blog.magnum.graphics/announcements/may-2015-updates/)
for a high-level overview.

@subsection corrade-changelog-2015-05-dependencies Dependency changes

No dependency changes in this release.

@subsection corrade-changelog-2015-05-new New features

-   Support for plugin aliases in @ref PluginManager library.
-   Range-based-for support in @ref Containers::LinkedList.
-   Added convenience @ref PluginManager::Manager::loadAndInstantiate()
    function.
-   Added @ref Containers::Array::slice() "Containers::*Array::slice()" and
    friends.
-   @ref Utility::Debug is able to reuse existing @cpp operator<< @ce overloads
    for @ref std::ostream (see [mosra/corrade#12](https://github.com/mosra/corrade/pull/12))
-   Added @ref Utility::String::beginsWith() and @ref Utility::String::endsWith().

@subsection corrade-changelog-2015-05-changes Changes

-   @ref TestSuite::Compare::Container is now able to compare non-copyable
    containers such as @ref Containers::Array
    (see [mosra/corrade#9](https://github.com/mosra/corrade/issues/9)).
-   Using @cpp const char @ce instead of @cpp const unsigned char @ce for raw
    binary data.
-   Better algorithm for comparing floating-point values in @ref TestSuite.

@subsection corrade-changelog-2015-05-buildsystem Build system

-   CMake now always installs `FindCorrade.cmake` to library-specific location,
    making it usable without providing own copy of the file in depending
    projects. The `WITH_FIND_MODULE` option is no longer needed. See [mosra/corrade#17](https://github.com/mosra/corrade/issues/17).
-   Displaying all header files, plugin metadata files and resource files in
    project view to make use of some IDEs less painful (such as QtCreator)
-   Properly checking for C++ standard compiler flags to avoid adding
    conflicting ones (see [mosra/corrade#10](https://github.com/mosra/corrade/pull/10))
-   Gentoo ebuild (see [mosra/corrade#16](https://github.com/mosra/corrade/issues/16))
-   Better handling of RPATH on macOS (see [mosra/corrade#18](https://github.com/mosra/corrade/pull/18))

@subsection corrade-changelog-2015-05-bugfixes Bug fixes

-   Removed static initializers to avoid memory corruption in static builds
    (see [mosra/magnum#90](https://github.com/mosra/magnum/issues/90)).
-   Plugin manager now correctly folows dependency order when unloading
    plugins.
-   Fixed issues with plugin manager having multiple global instances in static
    builds (see [mosra/corrade#15](https://github.com/mosra/corrade/issues/15))
-   Fixed a crash in Clang caused by overly clever code (see
    [mosra/magnum#84](https://github.com/mosra/magnum/issues/84))

@subsection corrade-changelog-2015-05-deprecated Deprecated APIs

No API was deprecated in this release.

@subsection corrade-changelog-2015-05-compatibility Potential compatibility breakages, removed APIs

-   Removed unused plugin replacement feature, as it had questionable benefits
    and no real use.
-   All functionality @ref corrade-changelog-2014-01-deprecated "deprecated in 2014.01"
    has been removed, namely:

    -   Removed deprecated ability to use relative includes (e.g.
        @cpp #include <Utility/Debug.h> @ce), use absolute paths
        (@cpp #include <Corrade/Utility/Debug.h> @ce) instead.
    -   Removed deprecated `Utility::String::split()` overload, use either
        @ref Utility::String::split() "split()" or
        @ref Utility::String::splitWithoutEmptyParts() "splitWithoutEmptyParts()"
        instead.

@section corrade-changelog-2014-06 2014.06

Released 2014-06-30, tagged as
[v2014.06](https://github.com/mosra/corrade/releases/tag/v2014.06). See the
[release announcement](https://blog.magnum.graphics/announcements/june-2014-updates/)
for a high-level overview.

@subsection corrade-changelog-2014-06-dependencies Dependency changes

-   Minimal required GCC version is now 4.7. Support for GCC 4.6 has been moved
    to `compatibility` branch.

@subsection corrade-changelog-2014-06-new New features

-   Initial Android support, see @ref building-corrade-cross-android "building documentation"
    for more information.
-   @ref Utility::AndroidLogStreamBuffer class for sending messages to
    Android system log
-   @ref CORRADE_TARGET_ANDROID and @ref CORRADE_TARGET_APPLE CMake and
    preprocessor variables

@subsection corrade-changelog-2014-06-changes Changes

-   Libraries and plugins in debug build configuration are installed to
    different locations, making it possible to have debug and release libraries
    installed alongside each other
-   Compiler compatibility mode is now automatically detected by CMake to make
    the building easier
-   It's no longer needed to explicitly test validity of pointer returned from
    @cpp PluginManager::Manager::instance() @ce
-   Improved error reporting in @ref PluginManager library
-   Thorough documentation review, fixes and improvements

@subsection corrade-changelog-2014-06-bugfixes Bug fixes

-   Fixed corner case when @ref Utility::Resource::getRaw() could
    unexpectedly return @cpp nullptr @ce.

@subsection corrade-changelog-2014-06-deprecated Deprecated APIs

No API was deprecated in this release.

@subsection corrade-changelog-2014-06-compatibility Potential compatibility breakages, removed APIs

-   All functionality deprecated in @ref corrade-changelog-2013-10-deprecated "2013.10"
    has been removed. In particular the deprecated @cpp Interconnect::Emitter::connect() @ce
    was removed, use @ref Interconnect::connect() instead.

@section corrade-changelog-2014-01 2014.01

Released 2014-01-21, tagged as
[v2014.01](https://github.com/mosra/corrade/releases/tag/v2014.01). See the
[release announcement](https://blog.magnum.graphics/announcements/january-2014-updates/)
for a high-level overview.

@subsection corrade-changelog-2014-01-dependencies Dependency changes

No dependency changes in this release.

@subsection corrade-changelog-2014-01-new New features

-   MSVC 2013 support in the `compatibility` branch
-   Ability to create @ref Containers::Array from initializer list
-   @ref Containers::Array::release() function to release ownership of the
    data, similar to @ref std::unique_ptr::release()
-   @ref Containers::Array::data() "Containers::Array[Reference]::data()"
    function for easier explicit data access and also disallowing pointer
    conversion of rvalue Array as it would result in access to deleted memory
    (GCC 4.8.1/Clang only).
-   Improved state change signals in @ref Interconnect::StateMachine
-   Support for multiple template arguments in @ref CORRADE_COMPARE_AS()
    macro in @ref TestSuite library.
-   @ref Utility::String::join() and @ref Utility::String::joinWithoutEmptyParts()
    functions.
-   @ref Utility::String::fromArray() convenience functions to create
    @ref std::string from either character array or @cpp nullptr @ce
-   Ability to retrieve list of all compiled-in resources in given group using
    @ref Utility::Resource::list()
-   Added @cpp read() @ce, @cpp readString() @ce, @cpp write() @ce and
    @cpp writeString() @ce functions to @cpp Utility::Directory @ce
-   New @ref CORRADE_HAS_TYPE() type traits macro, which now allows to use
    @ref Utility::Debug to print any container that is iterable with C++11
    range-based for.
-   New @ref CORRADE_TARGET_WINDOWS and @ref CORRADE_TARGET_UNIX
    preprocessor definitions and CMake variables.
-   All classes in documentation are now shown with corresponding @cpp #include @ce
    path

@subsection corrade-changelog-2014-01-changes Changes

-   @ref TestSuite tests now display @cb{.shell-session} ?: <unknown>() @ce in
    test output for test cases without any checks to make them more
    discoverable
-   Skipped test cases in @ref TestSuite tests are displayed without useless
    file/line information (unlike failed test cases, where the information is
    needed)
-   All deprecated functions and types are now emitting compiler warnings to
    encourage updating the code
-   Various documentation and example updates and improvements

@subsection corrade-changelog-2014-01-bugfixes Bug fixes

-   @ref TestSuite::Compare::File "TestSuite::Compare::*File*" is comparing
    the files in binary mode to avoid platform-dependent EOL issues.
-   @ref Utility::Resource now properly handles empty files when compiling
    resources.
-   @cpp Utility::Directory @ce is now working properly under Windows.
-   Fixed compilation issues with Clang and libc++
-   Fixed various compilation issues under MSVC (and worked around a much
    larger amount of compiler bugs)
-   Adapted @ref Utility::Configuration test to work under MinGW (see [mosra/corrade#7](https://github.com/mosra/corrade/pull/7))

@subsection corrade-changelog-2014-01-deprecated Deprecated APIs

-   @cpp Utility::String::split(..., bool) @ce is deprecated, use separate
    functions @ref Utility::String::split() "split()" and
    @ref Utility::String::splitWithoutEmptyParts() "splitWithoutEmptyParts()"
    instead.

@subsection corrade-changelog-2014-01-compatibility Potential compatibility breakages, removed APIs

-   Removed @cpp Utility::log2() @ce and @cpp Utility::pow2() @ce utility
    functions, as they weren't used anywhere anymore (and the latter one was a
    bad joke)
-   Removed useless metadata from @ref PluginManager::PluginMetadata class
    (author name, version, description), as they don't fit current use case
    anymore (they were used back in 2007 when Corrade was part of Kompas).
    These metadata can be easily added back as custom configuration values.
-   Removed now useless @cpp Utility::Translator @ce class, it was used only
    for plugin metadata and was prime example of bad design (exposing unguarded
    naked pointers)

@subsection corrade-changelog-2014-01-internal Internal changes

-   Using Jenkins Continuous Integration to maintain compilable and bug-free
    state of the project more easily. Currently GCC 4.8, 4.7, 4.6, 4.5, 4.4,
    Clang 3.3, Clang 3.3 with libc++, Emscripten, x86-32/x86-64 Native Client
    and MinGW32 compilers are tested with both shared and static libraries.
    Separately testing builds with deprecated features enabled and disabled.
-   All files from `src/` directory were moved to `src/Corrade`, `examples/`
    directory was moved to `src/examples` (required to make inter-project
    includes absolute, as mentioned above)

@section corrade-changelog-2013-10 2013.10

Released 2013-10-30, tagged as
[v2013.10](https://github.com/mosra/corrade/releases/tag/v2013.10). See the
[release annoucement](https://blog.magnum.graphics/announcements/october-2013-updates/)
for a high-level overview.

@subsection corrade-changelog-2013-10-dependencies Dependency changes

No dependency changes in this release.

@subsection corrade-changelog-2013-10-new New features

-   macOS port (thanks to David Lin, see [mosra/corrade#4](https://github.com/mosra/corrade/pull/4))
-   Fixed and updated Emscripten (HTML5) port
-   @ref Interconnect library can now connect signals to non-member functions
    and C++11 lambdas. See @ref Interconnect::connect() for more information.
-   Added simple @ref Interconnect::StateMachine "StateMachine"
    implementation into @ref Interconnect library.

@subsection corrade-changelog-2013-10-changes Changes

-   Returning @ref std::unique_ptr instead of naked pointer from
    @cpp PluginManager::Manager::instance() @ce for better usability and to
    avoid accidental memory leaks
-   Documentation updates and improvements to make the library more accessible
    for newcomers
-   Various build system updates for better compile times and easier
    installation

@subsection corrade-changelog-2013-10-buildsystem Build system

-   Added a `WITH_FIND_MODULE` CMake option to install Find modules for Corrade
    into a system location (see [mosra/corrade#2](https://github.com/mosra/corrade/issues/2))
-   `GCC*_COMPATIBILITY` is sometimes needed to be set explicitly (see [mosra/corrade#1](https://github.com/mosra/corrade/issues/31))
-   Installing `*.dll` and `*.lib` files to pproper locations on Windows (see [mosra/corrade#5](https://github.com/mosra/corrade/pull/5))

@subsection corrade-changelog-2013-10-bugfixes Bug fixes

-   @ref CORRADE_VERIFY() macro in @ref TestSuite can now be conveniently used
    also on classes with explicit @cpp operator bool() @ce
-   Fixed assertion failure on @cb{.shell-session} -long-arguments @ce parsing
    in @ref Utility::Arguments

@subsection corrade-changelog-2013-10-deprecated Deprecated APIs

-   @cpp Interconnect::Emitter::connect() @ce is deprecated, use
    @ref Interconnect::connect() instead.

@subsection corrade-changelog-2013-10-compatibility Potential compatibility breakages, removed APIs

No deprecated API was removed in this release.

@section corrade-changelog-2013-08 2013.08

Released 2013-08-30, tagged as
[v2013.08](https://github.com/mosra/corrade/releases/tag/v2013.08). See the
[Magnum project announcement](https://blog.magnum.graphics/announcements/introducing-magnum/)
for a high-level overview.

@section corrade-changelog-2012-02 2012.02

Released 2012-02-08, tagged as
[v2012.02](https://github.com/mosra/corrade/releases/tag/v2012.02). See the
[project announcement](https://blog.magnum.graphics/announcements/introducing-corrade/)
for a high-level overview.

*/

}
