#
#   This file is part of Corrade.
#
#   Copyright © 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
#               2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025
#             Vladimír Vondruš <mosra@centrum.cz>
#
#   Permission is hereby granted, free of charge, to any person obtaining a
#   copy of this software and associated documentation files (the "Software"),
#   to deal in the Software without restriction, including without limitation
#   the rights to use, copy, modify, merge, publish, distribute, sublicense,
#   and/or sell copies of the Software, and to permit persons to whom the
#   Software is furnished to do so, subject to the following conditions:
#
#   The above copyright notice and this permission notice shall be included
#   in all copies or substantial portions of the Software.
#
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
#   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#   DEALINGS IN THE SOFTWARE.
#

# IDE folder in VS, Xcode etc. CMake 3.12+, older versions have only the FOLDER
# property that would have to be set on each target separately.
set(CMAKE_FOLDER "Corrade/Filesystem")

set(CorradeFilesystem_SRCS
    AbstractFilesystem.cpp)

set(CorradeFilesystem_HEADERS
    AbstractFilesystem.h
    Filesystem.h
    visibility.h)

# Objects shared between main and test library
add_library(CorradeFilesystemObjects OBJECT
    ${CorradeFilesystem_SRCS}
    ${CorradeFilesystem_HEADERS}
    ${CorradeFilesystem_PRIVATE_HEADERS})
target_include_directories(CorradeFilesystemObjects PUBLIC $<TARGET_PROPERTY:CorradeUtility,INTERFACE_INCLUDE_DIRECTORIES>)
if(NOT CORRADE_BUILD_STATIC)
    target_compile_definitions(CorradeFilesystemObjects PRIVATE "-DCorradeTestSuiteObjects_EXPORTS")
endif()
if(NOT CORRADE_BUILD_STATIC OR CORRADE_BUILD_STATIC_PIC)
    set_target_properties(CorradeFilesystemObjects PROPERTIES POSITION_INDEPENDENT_CODE ON)
endif()

# Main Filesystem library
add_library(CorradeFilesystem ${SHARED_OR_STATIC}
    $<TARGET_OBJECTS:CorradeFilesystemObjects>
    ${_CORRADE_OBJECT_ONLY_TARGET_DUMMY_CPP}) # XCode workaround
set_target_properties(CorradeFilesystem PROPERTIES
    DEBUG_POSTFIX "-d")
if(NOT CORRADE_BUILD_STATIC)
    set_target_properties(CorradeFilesystem PROPERTIES VERSION ${CORRADE_LIBRARY_VERSION} SOVERSION ${CORRADE_LIBRARY_SOVERSION})
elseif(CORRADE_BUILD_STATIC_PIC)
    set_target_properties(CorradeFilesystem PROPERTIES POSITION_INDEPENDENT_CODE ON)
endif()
target_link_libraries(CorradeFilesystem PUBLIC CorradePluginManager)

install(TARGETS CorradeFilesystem
        RUNTIME DESTINATION ${CORRADE_BINARY_INSTALL_DIR}
        LIBRARY DESTINATION ${CORRADE_LIBRARY_INSTALL_DIR}
        ARCHIVE DESTINATION ${CORRADE_LIBRARY_INSTALL_DIR})
install(FILES ${CorradeFilesystem_HEADERS} DESTINATION ${CORRADE_INCLUDE_INSTALL_DIR}/Filesystem)

if(CORRADE_BUILD_TESTS)
    add_library(CorradeFilesystemTestLib ${SHARED_OR_STATIC} ${EXCLUDE_FROM_ALL_IF_TEST_TARGET}
        $<TARGET_OBJECTS:CorradeFilesystemObjects>
        ${_CORRADE_OBJECT_ONLY_TARGET_DUMMY_CPP}) # XCode workaround
    target_include_directories(CorradeFilesystemTestLib PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
    set_target_properties(CorradeFilesystemTestLib PROPERTIES DEBUG_POSTFIX "-d")
    if(CORRADE_BUILD_STATIC_PIC)
        set_target_properties(CorradeFilesystemTestLib PROPERTIES POSITION_INDEPENDENT_CODE ON)
    endif()
    target_link_libraries(CorradeFilesystemTestLib PUBLIC CorradePluginManager)

    add_subdirectory(Test ${EXCLUDE_FROM_ALL_IF_TEST_TARGET})
endif()

# Corrade::Filesystem target alias for superprojects
add_library(Corrade::Filesystem ALIAS CorradeFilesystem)
